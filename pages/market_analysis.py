import streamlit as st
import pandas as pd
from services.market_data import load_market_analysis, save_market_analysis
from components.charts import show_market_trend_chart

def show_market_analysis():
    st.header("Analyse des marchÃ©s")

    # Charger toutes les donnÃ©es
    df = load_market_analysis()

    # Filtrer uniquement les donnÃ©es de type "MarchÃ©"
    df_market = df[df["Type"] == "MarchÃ©"].copy()

    # Formulaire pour ajouter une nouvelle analyse de marchÃ©
    with st.form("market_form"):
        market = st.text_input("MarchÃ© (ex: DÃ©veloppeur React)")
        date = st.date_input("Date")
        number = st.number_input("Nombre d'annonces", min_value=0, step=1)
        trend = st.text_input("Tendance (ex: en hausse, stable, en baisse)")
        submitted = st.form_submit_button("Ajouter")

        if submitted and market:
            market_data = {
                "Date": str(date),
                "Type": "MarchÃ©",
                "MarchÃ©": market,
                "Nombre d'annonces": number,
                "Tendance": trend
            }
            save_market_analysis(market_data)
            st.success("âœ… DonnÃ©e ajoutÃ©e avec succÃ¨s.")

    # Affichage du tableau : ne conserver que les colonnes utiles
    st.subheader("ğŸ“Š Historique des marchÃ©s")
    if not df_market.empty:
        display_columns = ["Date", "MarchÃ©", "Nombre d'annonces", "Tendance"]
        st.dataframe(df_market[display_columns])
    else:
        st.info("Aucune donnÃ©e d'analyse de marchÃ© disponible.")

    # Affichage du graphique uniquement pour les donnÃ©es de type "MarchÃ©"
    st.subheader("ğŸ“ˆ Tendances des marchÃ©s")
    show_market_trend_chart(df_market)
