import streamlit as st
import pandas as pd
from pathlib import Path

DATA_PATH = Path("data/market_analysis.csv")

# Charger les donn√©es existantes ou cr√©er un tableau vide
if DATA_PATH.exists() and DATA_PATH.stat().st_size > 0:
    df = pd.read_csv(DATA_PATH)
else:
    df = pd.DataFrame(columns=["Date", "March√©", "Nombre d'annonces"])

st.title("Analyse des march√©s de l'emploi üìä")

# Formulaire pour ajouter un relev√©
with st.form("add_market_data"):
    st.subheader("Ajouter un relev√© quotidien")
    market = st.text_input("Nom du march√© (ex: D√©veloppeur web)")
    date = st.date_input("Date du relev√©")
    number = st.number_input("Nombre d'annonces trouv√©es", min_value=0, step=1)
    submitted = st.form_submit_button("Enregistrer")

    if submitted:
        new_entry = {"Date": date, "March√©": market, "Nombre d'annonces": number}
        df = pd.concat([df, pd.DataFrame([new_entry])], ignore_index=True)
        df.to_csv(DATA_PATH, index=False)
        st.success("Relev√© enregistr√© avec succ√®s !")

# Affichage des donn√©es
st.subheader("Historique des relev√©s")
st.dataframe(df)

# Visualisation
st.subheader("Tendances de tous les march√©s üìà")

if not df.empty:
    # Pivot pour avoir une colonne par march√©
    pivot_df = df.pivot(index="Date", columns="March√©", values="Nombre d'annonces")
    pivot_df = pivot_df.fillna(0)  # Remplir les jours manquants avec 0 (optionnel)

    st.line_chart(pivot_df)
else:
    st.info("Aucune donn√©e disponible pour l'instant.")